<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GGs.Agent</name>
    </assembly>
    <members>
        <member name="T:GGs.Agent.ElevatedEntry">
            <summary>
            Elevated entry point for privileged operations.
            Provides discrete, audited execution with structured logging and rollback tracking.
            </summary>
        </member>
        <member name="T:GGs.Agent.Elevation.ElevationBridge">
            <summary>
            Production-grade elevation bridge that uses the existing ElevatedEntry pathway.
            Provides discrete, audited privileged operations with structured logging and rollback support.
            </summary>
        </member>
        <member name="M:GGs.Agent.Elevation.ElevationBridge.ConvertToLegacyRequest(GGs.Shared.Elevation.ElevationRequest)">
            <summary>
            Converts the new ElevationRequest to the legacy ElevatedRequest format.
            </summary>
        </member>
        <member name="T:GGs.Agent.Elevation.ElevatedResponse">
            <summary>
            Response from elevated process (matches ElevatedEntry format).
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.EnhancedSystemInformationService">
            <summary>
            ENHANCED System Information Service - 1000%+ Improved
            Real implementations instead of placeholders
            Comprehensive hardware detection and system analysis
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.EnhancedSystemInformationService.CollectRealMemoryInformationAsync(System.Threading.CancellationToken)">
            <summary>
            Real Memory Information Collection - Not a placeholder!
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.EnhancedSystemInformationService.CollectRealStorageInformationAsync(System.Threading.CancellationToken)">
            <summary>
            Real Storage Information Collection with SMART data
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.EnhancedSystemInformationService.CollectRealNetworkInformationAsync(System.Threading.CancellationToken)">
            <summary>
            Real Network Information Collection with topology
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.EnhancedSystemInformationService.CollectRealPowerInformationAsync(System.Threading.CancellationToken)">
            <summary>
            Real Power Information Collection
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.EnhancedSystemInformationService.CollectRealPerformanceMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            Real Performance Metrics Collection
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.EnhancedTweakCollectionService">
            <summary>
            Enhanced system tweaks collection service with deep analysis and progress reporting
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.EnhancedTweakCollectionService.CollectSystemTweaksAsync(System.IProgress{GGs.Agent.Services.TweakCollectionProgress},System.Threading.CancellationToken)">
            <summary>
            Collects comprehensive system tweaks with animated progress reporting
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.EnhancedTweakCollectionService.UploadSystemTweaksAsync(GGs.Agent.Services.SystemTweaksCollection,System.IProgress{GGs.Agent.Services.TweakUploadProgress},System.Threading.CancellationToken)">
            <summary>
            Uploads system tweaks with progress reporting
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.HardwareDetectionService">
            <summary>
            Comprehensive hardware detection service supporting all GPU vendors and legacy hardware
            Provides deep system access for enterprise-grade hardware analysis
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.HardwareDetectionService.DetectAllGpuHardwareAsync(System.Threading.CancellationToken)">
            <summary>
            Detects all GPU hardware including legacy and modern cards from all vendors
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.HardwareDetectionService.DetectAllCpuHardwareAsync(System.Threading.CancellationToken)">
            <summary>
            Detects all CPU hardware including legacy processors and architectures
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.EnhancedGpuInfo">
            <summary>
            Enhanced GPU information with comprehensive vendor support
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.EnhancedCpuInfo">
            <summary>
            Enhanced CPU information with comprehensive architecture support
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.RealCpuDetectionService">
            <summary>
            Real CPU Detection Service - 1000%+ Enhanced
            Uses CPUID, WMI, Registry, and Performance Counters
            Supports Intel, AMD, and ARM processors
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealCpuDetectionService.CollectUltraDeepCpuInformationAsync(System.Threading.CancellationToken)">
            <summary>
            Collects ultra-deep CPU information using multiple detection methods
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.RealTimeMonitoringService">
            <summary>
            Real-time system monitoring service for enterprise-grade continuous data collection
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeMonitoringService.StartMonitoringAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Starts real-time monitoring with specified interval
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeMonitoringService.StopMonitoringAsync">
            <summary>
            Stops real-time monitoring
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeMonitoringService.CollectRealTimeData(System.Object)">
            <summary>
            Collects comprehensive real-time system data
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.RealTimeSystemMonitorService">
            <summary>
            Real-Time System Monitoring Service - Enterprise Grade
            Provides continuous, high-frequency monitoring of system resources
            Features:
            - CPU monitoring (per-core and aggregate)
            - Memory monitoring (physical, virtual, paging)
            - Disk I/O monitoring (read/write rates)
            - Network monitoring (bandwidth, packets, errors)
            - Process monitoring (top consumers)
            - GPU monitoring (if available)
            - Temperature monitoring (if available)
            - Power monitoring (battery, consumption)
            - Configurable sampling intervals
            - Historical data retention
            - Alert threshold detection
            - Performance counter integration
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.InitializeAsync">
            <summary>
            Initializes performance counters
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.StartMonitoringAsync(System.Threading.CancellationToken)">
            <summary>
            Starts continuous monitoring
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.StopMonitoringAsync">
            <summary>
            Stops monitoring
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.MonitoringLoopAsync(System.Threading.CancellationToken)">
            <summary>
            Main monitoring loop
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.TakeSnapshotAsync(System.Threading.CancellationToken)">
            <summary>
            Takes a snapshot of current system metrics
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetPerCoreCpuUsage">
            <summary>
            Gets CPU usage per core
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetTopProcessesByCpu(System.Int32)">
            <summary>
            Gets top processes by CPU usage
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetTopProcessesByMemory(System.Int32)">
            <summary>
            Gets top processes by memory usage
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetTotalThreadCount">
            <summary>
            Gets total thread count across all processes
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetTotalHandleCount">
            <summary>
            Gets total handle count across all processes
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetNetworkInterfaceInstance">
            <summary>
            Gets the primary network interface instance name
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.CheckThresholds(GGs.Agent.Services.MonitoringSnapshot)">
            <summary>
            Checks if any thresholds are exceeded
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetHistory(System.Int32)">
            <summary>
            Gets monitoring history
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetHistoricalAverage(System.Func{GGs.Agent.Services.MonitoringSnapshot,System.Double},System.Int32)">
            <summary>
            Gets historical average for a metric
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.GetHistoricalPeak(System.Func{GGs.Agent.Services.MonitoringSnapshot,System.Double},System.Int32)">
            <summary>
            Gets historical peak for a metric
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.RealTimeSystemMonitorService.ClearHistory">
            <summary>
            Clears monitoring history
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.SystemInformationService">
            <summary>
            Enterprise-grade system information collection service with deep hardware detection
            Supports all GPU vendors (NVIDIA, AMD, Intel) and legacy hardware
            </summary>
        </member>
        <member name="M:GGs.Agent.Services.SystemInformationService.CollectSystemInformationAsync(System.IProgress{GGs.Agent.Services.SystemCollectionProgress},System.Threading.CancellationToken)">
            <summary>
            Collects comprehensive system information with progress reporting
            </summary>
        </member>
        <member name="T:GGs.Agent.Services.SystemCollectionProgress">
            <summary>
            Progress reporting for system information collection
            </summary>
        </member>
        <member name="T:GGs.Agent.SystemAccess.WindowsSystemAccessProvider">
            <summary>
            Production-grade Windows system access provider.
            Implements deep system access with privilege-respecting, consent-gated operations.
            All operations are non-admin by default with graceful degradation.
            </summary>
            <summary>
            Part 2 of WindowsSystemAccessProvider - Network, Power, Security, and monitoring implementations.
            </summary>
        </member>
        <member name="T:GGs.Agent.Tweaks.NetworkTweakModule">
            <summary>
            Network Tweak Module: per-adapter DNS set/clear, hosts file edits under policy;
            verify connectivity post-change.
            Note: WinHTTP proxy settings require elevated privileges and are not implemented in this version.
            </summary>
        </member>
        <member name="T:GGs.Agent.Tweaks.PowerPerformanceTweakModule">
            <summary>
            Power and Performance Module: select power plans, background app throttling,
            scheduled maintenance windows; all revertible and verified.
            </summary>
        </member>
        <member name="T:GGs.Agent.Tweaks.RegistryTweakModule">
            <summary>
            Registry Tweak Module: typed writers/readers, preflight validation (existence/type/policy),
            atomic apply, verify, rollback; detailed Before -> After diffs in audit.
            </summary>
        </member>
        <member name="T:GGs.Agent.Tweaks.SecurityHealthTweakModule">
            <summary>
            Security Health Module: surface Defender and Firewall status via supported APIs;
            do not disable protections—only report and remediate within approved bounds.
            </summary>
        </member>
        <member name="T:GGs.Agent.Tweaks.ServiceTweakModule">
            <summary>
            Service Tweak Module: start/stop/restart/enable/disable with policy allow/deny sets;
            timeouts + reason-coded results; never touch blocked critical services.
            </summary>
        </member>
        <member name="M:GGs.Agent.Worker.ExecuteTweakWithEnhancedLogging(GGs.Shared.Tweaks.TweakDefinition,GGs.Shared.Tweaks.TelemetryContext)">
            <summary>
            Enterprise-grade tweak execution with comprehensive logging and error handling.
            Implements Prompt 4: Enhanced telemetry with OperationId, CorrelationId, synchronized timestamps, and reason codes.
            </summary>
        </member>
        <member name="M:GGs.Agent.Worker.SendAuditLogWithFallback(GGs.Shared.Tweaks.TweakApplicationLog,GGs.Shared.Tweaks.TelemetryContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Enterprise audit logging with comprehensive fallback strategy.
            Implements secure /api/audit/log endpoint with legacy fallback and reason codes.
            </summary>
        </member>
        <member name="M:GGs.Agent.Worker.TrySendAuditLog(System.String,GGs.Shared.Tweaks.TweakApplicationLog,GGs.Shared.Tweaks.TelemetryContext,System.String,System.Threading.CancellationToken)">
            <summary>
            Attempts to send audit log to specified endpoint with proper enterprise security headers and telemetry.
            </summary>
        </member>
        <member name="M:GGs.Agent.Worker.SendEnterpriseHeartbeat(Microsoft.AspNetCore.SignalR.Client.HubConnection,System.String,System.Threading.CancellationToken)">
            <summary>
            Enterprise heartbeat with comprehensive system health monitoring.
            Implements Prompt 4: Enhanced heartbeat with agent version, OS, uptime, working set, CPU count, connection state.
            Detailed health opts in via Agent:SendDetailedHealthData=true.
            </summary>
        </member>
        <member name="M:GGs.Agent.Worker.CalculateHealthScore(System.Diagnostics.Process)">
            <summary>
            Calculates a health score (0-100) based on process metrics.
            </summary>
        </member>
        <member name="M:GGs.Agent.Worker.SendHubExecutionResult(Microsoft.AspNetCore.SignalR.Client.HubConnection,GGs.Shared.Tweaks.TweakApplicationLog,GGs.Shared.Tweaks.TelemetryContext,System.Threading.CancellationToken)">
            <summary>
            Sends real-time execution result via SignalR hub for immediate admin feedback.
            Critical for enterprise real-time monitoring and compliance.
            </summary>
        </member>
        <member name="M:GGs.Agent.Worker.StoreFailedAuditLogAsync(GGs.Shared.Tweaks.TweakApplicationLog,GGs.Shared.Tweaks.TelemetryContext)">
            <summary>
            Stores failed audit logs to local disk for offline retry with encryption.
            Implements Prompt 4: Encrypted offline queue for failed audit logs.
            </summary>
        </member>
    </members>
</doc>
