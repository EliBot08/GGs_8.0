<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ========================================= -->
    <!-- ENTERPRISE BUTTON STYLES                -->
    <!-- ========================================= -->

    <!-- Primary Action Button -->
    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ThemeAccentGradient}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="24,12"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="shadow" Background="Black" CornerRadius="10" Opacity="0.15" 
                                RenderTransformOrigin="0.5,0.5" Margin="0,2,0,0">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="0.98" ScaleY="0.95"/>
                            </Border.RenderTransform>
                            <Border.Effect>
                                <BlurEffect Radius="10"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="10" Padding="{TemplateBinding Padding}"
                                ClipToBounds="False">
                            <Border.Effect>
                                <DropShadowEffect x:Name="glowEffect" Color="{DynamicResource ThemeAccentPrimaryColor}" 
                                                 Opacity="0" ShadowDepth="0" BlurRadius="0"/>
                            </Border.Effect>
                            <Grid>
                                <Rectangle Fill="{DynamicResource ThemeGlassEffect}" RadiusX="10" RadiusY="10"/>
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                 RenderTransformOrigin="0.5,0.5">
                                    <ContentPresenter.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                    To="1.03" Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                    To="1.03" Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="glowEffect"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0.6" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="glowEffect"
                                                    Storyboard.TargetProperty="BlurRadius"
                                                    To="20" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                    To="1.0" Duration="0:0:0.25">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                    To="1.0" Duration="0:0:0.25">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="glowEffect"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0" Duration="0:0:0.3"/>
                                    <DoubleAnimation Storyboard.TargetName="glowEffect"
                                                    Storyboard.TargetProperty="BlurRadius"
                                                    To="0" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ThemeTextDisabled}"/>
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                            <Setter Property="Foreground" Value="{DynamicResource ThemeTextTertiary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Secondary Button -->
    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ThemeAccentPrimary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeAccentPrimary}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="24,12"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeAccentPrimaryColor}" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                    To="1.02" Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                    To="1.02" Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                   To="Transparent" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                    To="1.0" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                    To="1.0" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Button -->
    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ThemeTextSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeSurfaceHoverColor}" Duration="0:0:0.15"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                    To="1.1" Duration="0:0:0.15">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                    To="1.1" Duration="0:0:0.15">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                   To="Transparent" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                    To="1.0" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                    To="1.0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ThemeTextPrimary}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================= -->
    <!-- ENTERPRISE TEXTBOX STYLE                -->
    <!-- ========================================= -->

    <Style x:Key="EnterpriseTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ThemeBackgroundTertiary}"/>
        <Setter Property="Foreground" Value="{DynamicResource ThemeTextPrimary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ThemeAccentPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="10">
                        <Border.Effect>
                            <DropShadowEffect x:Name="focusGlow" Color="{DynamicResource ThemeAccentPrimaryColor}" 
                                             Opacity="0" ShadowDepth="0" BlurRadius="0"/>
                        </Border.Effect>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"
                                     VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="GotFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeAccentPrimaryColor}" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="focusGlow"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0.4" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="focusGlow"
                                                    Storyboard.TargetProperty="BlurRadius"
                                                    To="12" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="LostFocus">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeBorderColor}" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="focusGlow"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="focusGlow"
                                                    Storyboard.TargetProperty="BlurRadius"
                                                    To="0" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ThemeBorderHover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ThemeBackgroundQuaternary}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ThemeTextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================= -->
    <!-- ENTERPRISE CARD STYLE                   -->
    <!-- ========================================= -->

    <Style x:Key="EnterpriseCard" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ThemeSurface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="16"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource ThemeShadowColor}" Opacity="0.08" 
                                 ShadowDepth="4" BlurRadius="16"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1.01" Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1.01" Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                       To="{DynamicResource ThemeBorderHoverColor}" Duration="0:0:0.25"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1.0" Duration="0:0:0.35">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1.0" Duration="0:0:0.35">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                       To="{DynamicResource ThemeBorderColor}" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- ========================================= -->
    <!-- ACTION BUTTON STYLE                     -->
    <!-- ========================================= -->

    <Style x:Key="ActionButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ThemeBackgroundSecondary}"/>
        <Setter Property="Foreground" Value="{DynamicResource ThemeTextPrimary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="18,12"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10" Padding="{TemplateBinding Padding}">
                        <Border.Effect>
                            <DropShadowEffect x:Name="shadow" Color="{DynamicResource ThemeShadowColor}" 
                                             Opacity="0.1" ShadowDepth="2" BlurRadius="8"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeSurfaceHoverColor}" Duration="0:0:0.2"/>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeAccentPrimaryColor}" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                    To="1.02" Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                    To="1.02" Duration="0:0:0.2">
                                        <DoubleAnimation.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="shadow"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0.2" Duration="0:0:0.2"/>
                                    <DoubleAnimation Storyboard.TargetName="shadow"
                                                    Storyboard.TargetProperty="BlurRadius"
                                                    To="12" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeBackgroundSecondaryColor}" Duration="0:0:0.25"/>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeBorderColor}" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                    To="1.0" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                    To="1.0" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="shadow"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0.1" Duration="0:0:0.25"/>
                                    <DoubleAnimation Storyboard.TargetName="shadow"
                                                    Storyboard.TargetProperty="BlurRadius"
                                                    To="8" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.98" ScaleY="0.98"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================= -->
    <!-- NAVIGATION BUTTON STYLE                 -->
    <!-- ========================================= -->

    <Style x:Key="NavButton" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ThemeTextSecondary}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,14"/>
        <Setter Property="Margin" Value="8,4"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                   To="{DynamicResource ThemeSurfaceHoverColor}" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="border"
                                                   Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                   To="Transparent" Duration="0:0:0.25"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ThemeAccentGradient}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================= -->
    <!-- STAT CARD STYLE                         -->
    <!-- ========================================= -->

    <Style x:Key="StatCard" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ThemeBackgroundSecondary}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource ThemeShadowColor}" Opacity="0.08" 
                                 ShadowDepth="2" BlurRadius="12"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1.03" Duration="0:0:0.25">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1.03" Duration="0:0:0.25">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                       To="{DynamicResource ThemeAccentPrimaryColor}" Duration="0:0:0.25"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                        To="1.0" Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                        To="1.0" Duration="0:0:0.3">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                       To="{DynamicResource ThemeBorderColor}" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- ========================================= -->
    <!-- ENTERPRISE PROGRESS BAR                 -->
    <!-- ========================================= -->

    <Style x:Key="EnterpriseProgressBar" TargetType="ProgressBar">
        <Setter Property="Background" Value="{DynamicResource ThemeBackgroundTertiary}"/>
        <Setter Property="Foreground" Value="{DynamicResource ThemeAccentGradient}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3" ClipToBounds="True">
                        <Grid>
                            <Rectangle x:Name="PART_Track" Fill="{TemplateBinding Foreground}" 
                                      HorizontalAlignment="Left" RadiusX="3" RadiusY="3">
                                <Rectangle.Effect>
                                    <DropShadowEffect Color="{DynamicResource ThemeAccentPrimaryColor}" 
                                                     Opacity="0.5" ShadowDepth="0" BlurRadius="8"/>
                                </Rectangle.Effect>
                            </Rectangle>
                            <Rectangle Fill="White" Opacity="0.3" HorizontalAlignment="Left" RadiusX="3" RadiusY="3">
                                <Rectangle.RenderTransform>
                                    <TranslateTransform x:Name="shimmer"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="shimmer"
                                                        Storyboard.TargetProperty="X"
                                                        From="-100" To="500" Duration="0:0:1.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
