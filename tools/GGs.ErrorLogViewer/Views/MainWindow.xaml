<Window x:Class="GGs.ErrorLogViewer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:local="clr-namespace:GGs.ErrorLogViewer.Views"
        xmlns:vm="clr-namespace:GGs.ErrorLogViewer.ViewModels"
        xmlns:models="clr-namespace:GGs.ErrorLogViewer.Models"
        xmlns:converters="clr-namespace:GGs.ErrorLogViewer.Views.Converters"
        Title="GGs Error Log Viewer" 
        Width="1200"
        Height="750"
        MinHeight="600"
        MinWidth="1024"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        ui:WindowHelper.UseModernWindowStyle="True"
        ResizeMode="CanResizeWithGrip"
        Background="{DynamicResource SystemControlBackgroundAltHighBrush}">

    <Window.InputBindings>
        <!-- Phase 10 - Keyboard shortcuts for accessibility -->
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}"/>
        <KeyBinding Key="Delete" Command="{Binding ClearLogsCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="S" Command="{Binding ExportLogsCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="C" Command="{Binding CopySelectedCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="F" Command="{Binding ClearOldLogsCommand}" Modifiers="Ctrl+Shift"/>
        <KeyBinding Key="D" Command="{Binding ToggleDetailsPaneCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="T" Command="{Binding ToggleThemeCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="R" Command="{Binding ToggleDetailsPaneCommand}" Modifiers="Alt"/>
    </Window.InputBindings>

    <Window.Resources>
        <!-- Log Level to Icon Converter -->
        <converters:LogLevelToIconConverter x:Key="LogLevelToIconConverter"/>
        <converters:LogLevelToColorConverter x:Key="LogLevelToColorConverter"/>
        <converters:SourceToColorConverter x:Key="SourceToColorConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:BooleanToStringConverter x:Key="BooleanToStringConverter"/>
        <converters:BooleanToSymbolConverter x:Key="BooleanToSymbolConverter"/>
        <converters:BooleanToBrushConverter x:Key="BooleanToBrushConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:BooleanToMessageConverter x:Key="BooleanToMessageConverter"/>
        <converters:RawOrCompactMessageConverter x:Key="RawOrCompactMessageConverter"/>
        <converters:StringEqualsToVisibilityConverter x:Key="StringEqualsToVisibilityConverter"/>
        
        <!-- Enhanced Button Styles with Smooth Animations -->
        <Style x:Key="ToolbarButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
            <Setter Property="Margin" Value="12,8"/>
            <Setter Property="Padding" Value="18,10"/>
            <Setter Property="MinWidth" Value="100"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="ToolTipService.ShowDuration" Value="5000"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8"
                                Padding="{TemplateBinding Padding}">
                            <Border.RenderTransform>
                                <ScaleTransform/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="Opacity" 
                                                           To="0.92" Duration="0:0:0.12"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="RenderTransform.ScaleX" 
                                                           To="1.04" Duration="0:0:0.12"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="RenderTransform.ScaleY" 
                                                           To="1.04" Duration="0:0:0.12"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="Opacity" 
                                                           To="1.0" Duration="0:0:0.18"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="RenderTransform.ScaleX" 
                                                           To="1.0" Duration="0:0:0.18"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="RenderTransform.ScaleY" 
                                                           To="1.0" Duration="0:0:0.18"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="Opacity" 
                                                           To="0.8" Duration="0:0:0.08"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="RenderTransform.ScaleX" 
                                                           To="0.97" Duration="0:0:0.08"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="RenderTransform.ScaleY" 
                                                           To="0.97" Duration="0:0:0.08"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="Opacity" 
                                                           To="1.0" Duration="0:0:0.12"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="RenderTransform.ScaleX" 
                                                           To="1.0" Duration="0:0:0.12"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder" 
                                                           Storyboard.TargetProperty="RenderTransform.ScaleY" 
                                                           To="1.0" Duration="0:0:0.12"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource DefaultToggleButtonStyle}">
            <Setter Property="Margin" Value="8,6"/>
            <Setter Property="Padding" Value="14,8"/>
            <Setter Property="MinWidth" Value="110"/>
        </Style>

        <Style x:Key="StatusTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="12,6"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <!-- Navigation Button Style -->
        <Style x:Key="NavButtonStyle" TargetType="RadioButton">
            <Setter Property="Padding" Value="22,16"/>
            <Setter Property="Margin" Value="12,8"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="NavBorder" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="6"
                                Margin="{TemplateBinding Margin}">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="NavBorder" Property="Background" Value="{DynamicResource SystemControlAccentBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="NavBorder" Property="Background" Value="#222"/>
                                <Setter TargetName="NavBorder" Property="Opacity" Value="0.95"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Foreground" Value="{DynamicResource SystemControlAccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="NavBorder" Property="Background" Value="#444"/>
                                <Setter TargetName="NavBorder" Property="Opacity" Value="0.85"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Icon Button Style -->
        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="IconBorder" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="IconBorder" Property="Background" Value="{DynamicResource SystemControlBackgroundBaseMediumBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="IconBorder" Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Styles -->
        <Style x:Key="LogDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource DefaultDataGridStyle}">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="CanUserReorderColumns" Value="True"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
            <Setter Property="AlternatingRowBackground" Value="{DynamicResource SystemControlBackgroundAltMediumBrush}"/>
        </Style>

        <!-- New: Style for log message text that adapts to Raw/Compact and font size -->
        <Style x:Key="LogMessageTextStyle" TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="FontSize" Value="{Binding DataContext.LogFontSize, RelativeSource={RelativeSource AncestorType=Window}}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.IsRawMode, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                    <Setter Property="FontFamily" Value="Consolas"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <DropShadowEffect x:Key="ToolbarShadowEffect" BlurRadius="8" ShadowDepth="2" Opacity="0.12"/>
        <DropShadowEffect x:Key="SidebarShadowEffect" BlurRadius="8" ShadowDepth="2" Opacity="0.10"/>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" MinWidth="160" MaxWidth="300"/> <!-- Sidebar -->
            <ColumnDefinition Width="Auto"/> <!-- Splitter -->
            <ColumnDefinition Width="*"/> <!-- Main Content -->
        </Grid.ColumnDefinitions>

        <!-- Sidebar Navigation -->
        <Border Grid.Column="0" 
                Background="{DynamicResource SystemControlBackgroundChromeMediumBrush}"
                BorderBrush="{DynamicResource SystemControlForegroundBaseMediumLowBrush}"
                BorderThickness="0,0,1,0"
                Padding="0,0,0,0"
                Effect="{DynamicResource SidebarShadowEffect}">
            <DockPanel>
                <!-- App Title -->
                <Border DockPanel.Dock="Top" 
                        Background="{DynamicResource SystemControlAccentBrush}"
                        Padding="16,20">
                    <StackPanel>
                        <TextBlock Text="GGs" 
                                   FontSize="24" 
                                   FontWeight="Bold"
                                   Foreground="White"/>
                        <TextBlock Text="Error Log Viewer" 
                                   FontSize="12" 
                                   Foreground="White"
                                   Opacity="0.9"/>
                    </StackPanel>
                </Border>

                <!-- Navigation Items -->
                <StackPanel DockPanel.Dock="Top" Margin="0,16,0,0">
                    <RadioButton x:Name="NavLogs" 
                                 Content="Logs" 
                                 IsChecked="True"
                                 Style="{StaticResource NavButtonStyle}"
                                 Command="{Binding SwitchToLogsViewCommand}"/>
                    <RadioButton x:Name="NavAnalytics" 
                                 Content="Analytics"
                                 Style="{StaticResource NavButtonStyle}"
                                 Command="{Binding SwitchToAnalyticsViewCommand}"/>
                    <RadioButton x:Name="NavBookmarks" 
                                 Content="Bookmarks"
                                 Style="{StaticResource NavButtonStyle}"
                                 Command="{Binding SwitchToBookmarksViewCommand}"/>
                    <RadioButton x:Name="NavAlerts" 
                                 Content="Alerts"
                                 Style="{StaticResource NavButtonStyle}"
                                 Command="{Binding SwitchToAlertsViewCommand}"/>
                </StackPanel>

                <!-- Bottom Actions -->
                <StackPanel DockPanel.Dock="Bottom" Margin="8">
                    <Button Command="{Binding ToggleThemeCommand}" 
                            Style="{StaticResource IconButtonStyle}"
                            ToolTip="Toggle Theme">
                        <ui:SymbolIcon Symbol="{Binding ThemeService.IsDarkMode, Converter={StaticResource BooleanToSymbolConverter}, ConverterParameter='Sunny|ClearNight'}" />
                    </Button>
                </StackPanel>
            </DockPanel>
        </Border>

        <!-- Sidebar Splitter -->
        <GridSplitter Grid.Column="1" 
                      Width="4" 
                      HorizontalAlignment="Center"
                      Background="{DynamicResource SystemControlForegroundBaseMediumLowBrush}"/>

        <!-- Main Content Area -->
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <!-- Toolbar -->
                <RowDefinition Height="Auto"/> <!-- Filters -->
                <RowDefinition Height="*"/>    <!-- Content -->
                <RowDefinition Height="Auto"/> <!-- Status Bar -->
            </Grid.RowDefinitions>

        <!-- Toolbar -->
        <Border Grid.Row="0" Background="{DynamicResource SystemControlBackgroundChromeMediumBrush}" 
                BorderBrush="{DynamicResource SystemControlForegroundBaseMediumLowBrush}" 
                BorderThickness="0,0,0,1"
                Padding="32,20"  <!-- More padding for premium feel -->
                Effect="{DynamicResource ToolbarShadowEffect}">
            <DockPanel Margin="32,20,32,0"> <!-- Increased margin for premium spacing -->
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,0,0"> <!-- Removed Spacing property, use Margin on children instead -->
                    <Button Command="{Binding StartMonitoringCommand}" 
                            Style="{StaticResource ToolbarButtonStyle}"
                            IsEnabled="{Binding IsMonitoring, Converter={StaticResource InverseBooleanConverter}}"
                            ToolTip="Start monitoring log files">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Play" Margin="0,0,4,0"/>
                            <TextBlock Text="Start"/>
                        </StackPanel>
                    </Button>

                    <Button Command="{Binding StopMonitoringCommand}" 
                            Style="{StaticResource ToolbarButtonStyle}"
                            IsEnabled="{Binding IsMonitoring}"
                            ToolTip="Stop monitoring log files">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Stop" Margin="0,0,4,0"/>
                            <TextBlock Text="Stop"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <Separator DockPanel.Dock="Left" Margin="20,0" Height="32"/>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" VerticalAlignment="Center">
                    <ToggleButton IsChecked="{Binding IsRawMode}" 
                                  Style="{StaticResource ToggleButtonStyle}"
                                  ToolTip="Toggle between compact and raw log view">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="View" Margin="0,0,4,0"/>
                            <TextBlock Text="{Binding IsRawMode, Converter={StaticResource BooleanToStringConverter}, ConverterParameter='Raw|Compact'}"/>
                        </StackPanel>
                    </ToggleButton>

                    <Button Command="{Binding ToggleThemeCommand}" 
                            Style="{StaticResource ToolbarButtonStyle}"
                            ToolTip="Toggle between dark and light theme">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="{Binding ThemeService.IsDarkMode, Converter={StaticResource BooleanToSymbolConverter}, ConverterParameter='Sunny|ClearNight'}" Margin="0,0,4,0"/>
                            <TextBlock Text="{Binding ThemeService.IsDarkMode, Converter={StaticResource BooleanToStringConverter}, ConverterParameter='Light|Dark'}"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <Separator DockPanel.Dock="Left" Margin="20,0" Height="32"/>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" VerticalAlignment="Center">
                    <Button Command="{Binding RefreshCommand}" 
                            Style="{StaticResource ToolbarButtonStyle}"
                            ToolTip="Refresh log files">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Refresh" Margin="0,0,4,0"/>
                            <TextBlock Text="Refresh"/>
                        </StackPanel>
                    </Button>

                    <Button Command="{Binding ClearLogsCommand}" 
                            Style="{StaticResource ToolbarButtonStyle}"
                            ToolTip="Clear all log entries from view">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Clear" Margin="0,0,4,0"/>
                            <TextBlock Text="Clear"/>
                        </StackPanel>
                    </Button>

                    <Button Command="{Binding ExportLogsCommand}" 
                            Style="{StaticResource ToolbarButtonStyle}"
                            ToolTip="Export filtered logs">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Save" Margin="0,0,4,0"/>
                            <TextBlock Text="Export"/>
                        </StackPanel>
                    </Button>

                    <Button Command="{Binding OpenLogDirectoryCommand}" 
                            Style="{StaticResource ToolbarButtonStyle}"
                            ToolTip="Open log directory">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Folder" Margin="0,0,4,0"/>
                            <TextBlock Text="Open Folder"/>
                        </StackPanel>
                    </Button>

                    <Button Command="{Binding ClearOldLogsCommand}" 
                            Style="{StaticResource ToolbarButtonStyle}"
                            ToolTip="Clear old logs">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Delete" Margin="0,0,4,0"/>
                            <TextBlock Text="Clear Old"/>
                        </StackPanel>
                    </Button>

                    <Button Command="{Binding ToggleDetailsPaneCommand}"
                            Style="{StaticResource ToolbarButtonStyle}"
                            ToolTip="Toggle details panel"
                            IsEnabled="{Binding HasSelectedLogEntry}">
                        <StackPanel Orientation="Horizontal">
                            <ui:SymbolIcon Symbol="Contact" Margin="0,0,4,0"/>
                            <TextBlock Text="Details"/>
                        </StackPanel>
                    </Button>
                </StackPanel>

                <TextBlock DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Right"
                           Text="GGs Error Log Viewer"
                           Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                           Opacity="0.7"
                           FontSize="16" FontWeight="SemiBold" Margin="0,0,24,0"/>
            </DockPanel>
        </Border>        <!-- Filters -->
        <Border Grid.Row="1" Background="{DynamicResource SystemControlBackgroundAltMediumBrush}" BorderBrush="{DynamicResource SystemControlForegroundBaseMediumLowBrush}" BorderThickness="0,0,0,1" Padding="24,14" Margin="0,0,0,0">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="Auto"/>
                    <!-- New: Regex toggle, Smart Filter, Font label, Font slider -->
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>

                <!-- Search -->
                <TextBlock Grid.Column="0" Text="Search:" VerticalAlignment="Center" Margin="0,0,12,0" FontWeight="Medium"/>
                <ui:AutoSuggestBox Grid.Column="1" 
                                   Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                                   PlaceholderText="Search logs by message, category, exception, or source..."
                                   Margin="0,0,20,0"/>

                <!-- Log Level Filter -->
                <TextBlock Grid.Column="2" Text="Level:" VerticalAlignment="Center" Margin="0,0,12,0" FontWeight="Medium"/>
                <ComboBox Grid.Column="3" 
                          SelectedItem="{Binding SelectedLogLevel}"
                          Margin="0,0,20,0">
                    <ComboBox.Items>
                        <models:LogLevel>All</models:LogLevel>
                        <models:LogLevel>Trace</models:LogLevel>
                        <models:LogLevel>Debug</models:LogLevel>
                        <models:LogLevel>Information</models:LogLevel>
                        <models:LogLevel>Success</models:LogLevel>
                        <models:LogLevel>Warning</models:LogLevel>
                        <models:LogLevel>Error</models:LogLevel>
                        <models:LogLevel>Critical</models:LogLevel>
                    </ComboBox.Items>
                </ComboBox>

                <!-- Source Filter -->
                <TextBlock Grid.Column="4" Text="Source:" VerticalAlignment="Center" Margin="0,0,12,0" FontWeight="Medium"/>
                <ComboBox Grid.Column="5" 
                          SelectedItem="{Binding SelectedSource}"
                          ItemsSource="{Binding AvailableSources}"
                          Margin="0,0,20,0"/>

                <!-- Auto-scroll Toggle -->
                <CheckBox Grid.Column="6" 
                          IsChecked="{Binding AutoScroll}"
                          Content="Auto-scroll"
                          VerticalAlignment="Center"
                          Margin="0,0,20,0"
                          ToolTip="Automatically scroll to newest log entries"/>

                <!-- New: Regex toggle -->
                <CheckBox Grid.Column="7" 
                          IsChecked="{Binding UseRegex}"
                          Content="Regex"
                          VerticalAlignment="Center"
                          Margin="0,0,20,0"
                          ToolTip="Use Regular Expression for searching"/>

                <!-- New: Smart Filter toggle -->
                <CheckBox Grid.Column="8" 
                          IsChecked="{Binding SmartFilter}"
                          Content="Smart Filter"
                          VerticalAlignment="Center"
                          Margin="0,0,20,0"
                          ToolTip="Show duplicate errors/warnings only once (Smart Deduplication)"/>

                <!-- New: Font size control -->
                <TextBlock Grid.Column="9" Text="Font:" VerticalAlignment="Center" Margin="0,0,12,0" FontWeight="Medium"/>
                <Slider Grid.Column="10" Minimum="9" Maximum="24" TickFrequency="1" IsSnapToTickEnabled="True"
                        Value="{Binding LogFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Width="180" VerticalAlignment="Center"/>
            </Grid>
        </Border>

        <!-- Main Content -->
        <!-- Content Area with View Switching -->
        <ContentControl Grid.Row="2" Margin="24,16,24,0">
            <ContentControl.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="24,32,24,0" To="24,16,24,0" Duration="0:0:0.4">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut"/>
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ContentControl.Triggers>
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <!-- Logs View -->
                        <DataTrigger Binding="{Binding ActiveView}" Value="Logs">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" MinWidth="720"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="420" MinWidth="320"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Log Entries DataGrid -->
                                        <DataGrid x:Name="LogEntriesDataGrid" Grid.Column="0"
                                                  ItemsSource="{Binding LogEntriesView}"
                                                  SelectedItem="{Binding SelectedLogEntry}"
                                                  Style="{StaticResource LogDataGridStyle}"
                                                  Margin="0,0,12,16"
                                                  EnableRowVirtualization="True"
                                                  EnableColumnVirtualization="True"
                                                  RowHeight="36">
                                            
                                            <DataGrid.Columns>
                                                <!-- Level Icon -->
                                                <DataGridTemplateColumn Header="" Width="40" CanUserResize="False" CanUserSort="False">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <ui:SymbolIcon Symbol="{Binding Level, Converter={StaticResource LogLevelToIconConverter}}"
                                                                           Foreground="{Binding Level, Converter={StaticResource LogLevelToColorConverter}}"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>

                                                <!-- Timestamp -->
                                                <DataGridTextColumn Header="Time" 
                                                                    Binding="{Binding FormattedTimestamp}" 
                                                                    Width="140"
                                                                    SortDirection="Descending"/>

                                                <!-- Level -->
                                                <DataGridTextColumn Header="Level" 
                                                                    Binding="{Binding Level}" 
                                                                    Width="80"/>

                                                <!-- Source -->
                                                <DataGridTemplateColumn Header="Source" Width="100">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Source}"
                                                                       Foreground="{Binding Source, Converter={StaticResource SourceToColorConverter}}"
                                                                       FontWeight="SemiBold"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>

                                                <!-- Message -->
                                                <DataGridTemplateColumn Header="Message" Width="*">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Style="{StaticResource LogMessageTextStyle}">
                                                                <TextBlock.Text>
                                                                    <MultiBinding Converter="{StaticResource RawOrCompactMessageConverter}">
                                                                        <Binding Path="DataContext.IsRawMode" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                                                        <Binding/>
                                                                    </MultiBinding>
                                                                </TextBlock.Text>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>

                                            <!-- Row Styling -->
                                            <DataGrid.RowStyle>
                                                <Style TargetType="DataGridRow" BasedOn="{StaticResource DefaultDataGridRowStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Level}" Value="Error">
                                                            <Setter Property="Background" Value="#FF2D1B1B"/>
                                                            <Setter Property="BorderBrush" Value="#FFDC3545"/>
                                                            <Setter Property="BorderThickness" Value="0,0,3,0"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Level}" Value="Warning">
                                                            <Setter Property="Background" Value="#FF2D241B"/>
                                                            <Setter Property="BorderBrush" Value="#FFFFC107"/>
                                                            <Setter Property="BorderThickness" Value="0,0,3,0"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.RowStyle>
                                        </DataGrid>

                                        <!-- Vertical Splitter -->
                                        <GridSplitter Grid.Column="1" 
                                                      Width="6" 
                                                      HorizontalAlignment="Center"
                                                      Background="{DynamicResource SystemControlForegroundBaseMediumLowBrush}"
                                                      Visibility="{Binding IsDetailsPaneVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <!-- Details Panel -->
                                        <Border Grid.Column="2" 
                                                Background="{DynamicResource SystemControlBackgroundAltMediumBrush}"
                                                BorderBrush="{DynamicResource SystemControlForegroundBaseMediumLowBrush}"
                                                BorderThickness="1,0,0,0"
                                                Padding="20"
                                                Margin="12,0,0,16"
                                                CornerRadius="8"
                                                Visibility="{Binding IsDetailsPaneVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                <StackPanel DataContext="{Binding SelectedLogEntry}">
                                                    <TextBlock Text="Log Entry Details" FontSize="20" FontWeight="SemiBold" Margin="0,0,0,20"/>
                                                    <ContentControl Content="{Binding}" >
                                                        <ContentControl.Style>
                                                            <Style TargetType="ContentControl">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                                                        <Setter Property="ContentTemplate">
                                                                            <Setter.Value>
                                                                                <DataTemplate>
                                                                                    <TextBlock Text="Select a log entry to see details." FontStyle="Italic" Opacity="0.7"/>
                                                                                </DataTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ContentControl.Style>
                                                    </ContentControl>
                                                    <TextBlock Text="{Binding Message}" TextWrapping="Wrap" Margin="0,0,0,16" LineHeight="22"/>
                                                    <TextBlock Text="{Binding FormattedTimestamp}" FontSize="13" Opacity="0.7"/>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- Analytics View -->
                        <DataTrigger Binding="{Binding ActiveView}" Value="Analytics">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <StackPanel Margin="20">
                                            <TextBlock Text="Analytics Dashboard" FontSize="24" FontWeight="SemiBold" Margin="0,0,0,20"/>
                                            <TextBlock Text="View log statistics and trends" FontSize="14" Opacity="0.7"/>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- Bookmarks View -->
                        <DataTrigger Binding="{Binding ActiveView}" Value="Bookmarks">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <StackPanel Margin="20">
                                            <TextBlock Text="Bookmarks" FontSize="24" FontWeight="SemiBold" Margin="0,0,0,20"/>
                                            <TextBlock Text="Your saved log entries" FontSize="14" Opacity="0.7"/>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- Alerts View -->
                        <DataTrigger Binding="{Binding ActiveView}" Value="Alerts">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <StackPanel Margin="20">
                                            <TextBlock Text="Smart Alerts" FontSize="24" FontWeight="SemiBold" Margin="0,0,0,20"/>
                                            <TextBlock Text="Configure and manage log alerts" FontSize="14" Opacity="0.7"/>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- Compare View -->
                        <DataTrigger Binding="{Binding ActiveView}" Value="Compare">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <local:CompareView/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- Export View -->
                        <DataTrigger Binding="{Binding ActiveView}" Value="Export">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <local:ExportView/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <!-- Settings View -->
                        <DataTrigger Binding="{Binding ActiveView}" Value="Settings">
                            <Setter Property="Content">
                                <Setter.Value>
                                    <local:SettingsView/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>
        <!-- Status Bar -->
        <Border Grid.Row="3" 
                Background="{DynamicResource SystemControlBackgroundChromeMediumBrush}"
                BorderBrush="{DynamicResource SystemControlForegroundBaseMediumLowBrush}"
                BorderThickness="0,1,0,0"
                Padding="24,12">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Status Message -->
                <TextBlock Grid.Column="0" 
                           Text="{Binding StatusMessage}" 
                           Style="{StaticResource StatusTextStyle}"/>

                <!-- Monitoring Status -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="24,0,0,0">
                    <Ellipse Width="10" Height="10" 
                             Fill="{Binding IsMonitoring, Converter={StaticResource BooleanToBrushConverter}, ConverterParameter='LimeGreen|Gray'}"
                             VerticalAlignment="Center" Margin="0,0,6,0"/>
                    <TextBlock Text="{Binding IsMonitoring, Converter={StaticResource BooleanToStringConverter}, ConverterParameter='Monitoring|Stopped'}" 
                               Style="{StaticResource StatusTextStyle}"/>
                </StackPanel>

                <!-- Log Counts -->
                <TextBlock Grid.Column="2" 
                           Style="{StaticResource StatusTextStyle}"
                           Margin="24,0,0,0">
                    <Run Text="Showing"/>
                    <Run Text="{Binding FilteredLogCount}" FontWeight="SemiBold"/>
                    <Run Text="of"/>
                    <Run Text="{Binding TotalLogCount}" FontWeight="SemiBold"/>
                    <Run Text="logs"/>
                </TextBlock>

                <!-- Theme Indicator -->
                <TextBlock Grid.Column="3" 
                           Text="{Binding ThemeService.CurrentTheme}" 
                           Style="{StaticResource StatusTextStyle}"
                           Margin="24,0,0,0"/>
            </Grid>
        </Border>
        </Grid> <!-- Close Grid.Column="2" Main Content Area -->
    </Grid> <!-- Close Root Grid -->
</Window>









