<Window x:Class="GGs.ErrorLogViewer.Views.MainWindow" xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:GGs.ErrorLogViewer.Views"
        xmlns:models="clr-namespace:GGs.ErrorLogViewer.Models"
        xmlns:converters="clr-namespace:GGs.ErrorLogViewer.Views.Converters"
        Title="GGs Error Intelligence Center"
        Width="1280"
        Height="820"
        MinWidth="1120"
        MinHeight="700"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        ResizeMode="CanResizeWithGrip"
        Background="#090B14">

    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}"/>
        <KeyBinding Key="Delete" Command="{Binding ClearLogsCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="S" Command="{Binding ExportLogsCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="C" Command="{Binding CopySelectedCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="F" Command="{Binding ClearOldLogsCommand}" Modifiers="Ctrl+Shift"/>
        <KeyBinding Key="D" Command="{Binding ToggleDetailsPaneCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="T" Command="{Binding ToggleThemeCommand}" Modifiers="Ctrl"/>
        <KeyBinding Key="R" Command="{Binding ToggleDetailsPaneCommand}" Modifiers="Alt"/>
    </Window.InputBindings>

    <Window.Resources>
        <ResourceDictionary>
            <!-- Theme Colors -->
            <Color x:Key="BrandPrimaryColor">#FF3C6FFF</Color>
            <Color x:Key="BrandSecondaryColor">#FF743CFF</Color>
            <Color x:Key="SurfaceColor">#111424</Color>
            <Color x:Key="SurfaceAltColor">#171B2F</Color>
            <Color x:Key="SurfaceElevatedColor">#1E233A</Color>
            <Color x:Key="StrokeColor">#2C324D</Color>
            <Color x:Key="TextPrimaryColor">#FFFFFFFF</Color>
            <Color x:Key="TextSecondaryColor">#FFB5C1DA</Color>
            <Color x:Key="TextMutedColor">#FF8090B0</Color>
            <Color x:Key="SuccessColor">#FF31D3A3</Color>
            <Color x:Key="WarningColor">#FFFFC35B</Color>
            <Color x:Key="DangerColor">#FFFF6A7A</Color>

            <!-- Brushes -->
            <SolidColorBrush x:Key="BrandPrimaryBrush" Color="{StaticResource BrandPrimaryColor}"/>
            <SolidColorBrush x:Key="BrandSecondaryBrush" Color="{StaticResource BrandSecondaryColor}"/>
            <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
            <SolidColorBrush x:Key="SurfaceAltBrush" Color="{StaticResource SurfaceAltColor}"/>
            <SolidColorBrush x:Key="SurfaceElevatedBrush" Color="{StaticResource SurfaceElevatedColor}"/>
            <SolidColorBrush x:Key="StrokeBrush" Color="{StaticResource StrokeColor}"/>
            <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}"/>
            <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}"/>
            <SolidColorBrush x:Key="TextMutedBrush" Color="{StaticResource TextMutedColor}"/>
            <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
            <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}"/>
            <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource DangerColor}"/>

            <LinearGradientBrush x:Key="HeroBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FF1A2364" Offset="0"/>
                <GradientStop Color="#FF0F152E" Offset="1"/>
            </LinearGradientBrush>

            <DropShadowEffect x:Key="PanelShadow"
                              BlurRadius="20"
                              Direction="270"
                              ShadowDepth="6"
                              Opacity="0.32"
                              Color="#E0000000"/>

            <!-- Converters -->
            <converters:LogLevelToIconConverter x:Key="LogLevelToIconConverter"/>
            <converters:LogLevelToColorConverter x:Key="LogLevelToColorConverter"/>
            <converters:SourceToColorConverter x:Key="SourceToColorConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <converters:BooleanToStringConverter x:Key="BooleanToStringConverter"/>
            <converters:BooleanToSymbolConverter x:Key="BooleanToSymbolConverter"/>
            <converters:BooleanToBrushConverter x:Key="BooleanToBrushConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:BooleanToMessageConverter x:Key="BooleanToMessageConverter"/>
            <converters:RawOrCompactMessageConverter x:Key="RawOrCompactMessageConverter"/>
            <converters:StringEqualsConverter x:Key="StringEqualsConverter"/>

            <!-- Primary Buttons -->
            <Style x:Key="PrimaryButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="16,10"/>
                <Setter Property="Margin" Value="0,0,12,0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#FF3C6FFF" Offset="0"/>
                            <GradientStop Color="#FF743CFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="12"
                                    Padding="{TemplateBinding Padding}">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                                </Border.RenderTransform>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="1.04" Duration="0:0:0.12"/>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" To="1.04" Duration="0:0:0.12"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.12"/>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.12"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="0.96" Duration="0:0:0.08"/>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" To="0.96" Duration="0:0:0.08"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="1.04" Duration="0:0:0.12"/>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" To="1.04" Duration="0:0:0.12"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.45"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GhostButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
                <Setter Property="Background" Value="{StaticResource SurfaceAltBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource StrokeBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}"/>

            <!-- Navigation Toggle -->
            <Style x:Key="NavigationToggleStyle" TargetType="ToggleButton">
                <Setter Property="Margin" Value="0,8,0,0"/>
                <Setter Property="Padding" Value="14,10"/>
                <Setter Property="Background" Value="{StaticResource SurfaceAltBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource StrokeBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="12"
                                    Padding="{TemplateBinding Padding}">
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1"/>
                                </Border.RenderTransform>
                                <Grid>
                                    <Border x:Name="Accent" Width="4" HorizontalAlignment="Left" CornerRadius="4" Background="{StaticResource BrandPrimaryBrush}" Opacity="0"/>
                                    <ContentPresenter Margin="16,0,0,0" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Root" Property="Background" Value="{StaticResource SurfaceElevatedBrush}"/>
                                    <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource BrandPrimaryBrush}"/>
                                    <Setter TargetName="Accent" Property="Opacity" Value="1"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="1.03" Duration="0:0:0.12"/>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" To="1.03" Duration="0:0:0.12"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" To="1" Duration="0:0:0.12"/>
                                                <DoubleAnimation Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" To="1" Duration="0:0:0.12"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Root" Property="Opacity" Value="0.4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Filter Toggle -->
            <Style x:Key="FilterToggleStyle" TargetType="ToggleButton">
                <Setter Property="Margin" Value="0,0,12,0"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Background" Value="{StaticResource SurfaceAltBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource StrokeBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border x:Name="Root"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="Root" Property="Background" Value="{StaticResource BrandPrimaryBrush}"/>
                                    <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource BrandPrimaryBrush}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Root" Property="BorderBrush" Value="{StaticResource BrandPrimaryBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- DataGrid Styles -->
            <Style x:Key="PremiumColumnHeaderStyle" TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#131A33"/>
                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="12,10"/>
                <Setter Property="BorderBrush" Value="#22283F"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
            </Style>

            <Style x:Key="PremiumDataGridRowStyle" TargetType="DataGridRow">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="4"/>
                <Setter Property="Margin" Value="0,0,0,6"/>
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#20294B"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#2B3664"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BrandPrimaryBrush}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding Level}" Value="Warning">
                        <Setter Property="BorderBrush" Value="{StaticResource WarningBrush}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,2"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Level}" Value="Error">
                        <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Level}" Value="Critical">
                        <Setter Property="Background" Value="#341E1E"/>
                        <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
                        <Setter Property="BorderThickness" Value="0,0,0,3"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PremiumDataGridStyle" TargetType="DataGrid">
                <Setter Property="Background" Value="{StaticResource SurfaceElevatedBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="RowBackground" Value="Transparent"/>
                <Setter Property="AlternatingRowBackground" Value="#151C33"/>
                <Setter Property="GridLinesVisibility" Value="None"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="SelectionMode" Value="Extended"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserResizeRows" Value="False"/>
                <Setter Property="HorizontalGridLinesBrush" Value="#22283F"/>
                <Setter Property="VerticalGridLinesBrush" Value="#22283F"/>
                <Setter Property="RowHeight" Value="40"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
            </Style>

            <Style x:Key="TagPillStyle" TargetType="Border">
                <Setter Property="Background" Value="#1F2B4F"/>
                <Setter Property="CornerRadius" Value="12"/>
                <Setter Property="Padding" Value="10,4"/>
                <Setter Property="Margin" Value="0,0,10,10"/>
            </Style>
        </ResourceDictionary>    </Window.Resources>

    <Grid Background="{StaticResource SurfaceBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Hero Section Placeholder -->
        <Border Grid.Row="0" Background="{StaticResource HeroBackgroundBrush}" CornerRadius="18" Padding="32" Margin="24,24,24,16" Effect="{StaticResource PanelShadow}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel>
                    <TextBlock Text="GGs Error Intelligence Center" FontSize="28" FontWeight="Bold" Foreground="{StaticResource TextPrimaryBrush}"/>
                    <TextBlock Text="Enterprise-grade monitoring with real-time intelligence" Margin="0,8,0,0" Foreground="{StaticResource TextSecondaryBrush}"/>
                </StackPanel>

                <WrapPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button Content="Start Monitoring" Command="{Binding StartMonitoringCommand}"/>
                    <Button Content="Stop" Command="{Binding StopMonitoringCommand}"/>
                    <Button Content="Refresh" Command="{Binding RefreshCommand}"/>
                    <Button Content="Clear" Command="{Binding ClearLogsCommand}"/>
                    <Button Content="Export" Command="{Binding ExportLogsCommand}"/>
                </WrapPanel>
            </Grid>
        </Border>

        <!-- Filter Bar Placeholder -->
        <Border Grid.Row="1" Background="{StaticResource SurfaceAltBrush}" CornerRadius="14" Margin="24,0,24,18" Padding="20" Effect="{StaticResource PanelShadow}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Name="SearchBox" Grid.Column="0" Margin="0,0,16,0" Height="34"
                         Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Foreground="{StaticResource TextPrimaryBrush}"
                         Background="{StaticResource SurfaceElevatedBrush}"
                         BorderBrush="{StaticResource StrokeBrush}"
                         BorderThickness="1"
                         Padding="14,4"
                         ToolTip="Search message, source or raw line"/>

                <ComboBox Grid.Column="1" Margin="0,0,16,0" Height="34"
                          SelectedItem="{Binding SelectedLogLevel}">
                    <ComboBox.Items>
                        <models:LogLevel>All</models:LogLevel>
                        <models:LogLevel>Verbose</models:LogLevel>
                        <models:LogLevel>Debug</models:LogLevel>
                        <models:LogLevel>Information</models:LogLevel>
                        <models:LogLevel>Warning</models:LogLevel>
                        <models:LogLevel>Error</models:LogLevel>
                        <models:LogLevel>Critical</models:LogLevel>
                    </ComboBox.Items>
                </ComboBox>

                <ComboBox Grid.Column="2" Margin="0,0,16,0" Height="34"
                          ItemsSource="{Binding AvailableSources}"
                          SelectedItem="{Binding SelectedSource}"/>

                <ToggleButton Grid.Column="3" Content="Regex" Style="{StaticResource FilterToggleStyle}" IsChecked="{Binding UseRegex}"/>
                <ToggleButton Grid.Column="4" Content="Smart Filter" Style="{StaticResource FilterToggleStyle}" IsChecked="{Binding SmartFilter}"/>
                <ToggleButton Grid.Column="5" Content="Auto Scroll" Style="{StaticResource FilterToggleStyle}" IsChecked="{Binding AutoScroll}"/>
            </Grid>
        </Border>

                <!-- Main Content -->
        <Grid Grid.Row="2" Margin="24,0,24,18">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="260"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Margin="0,0,24,0" Background="{StaticResource SurfaceAltBrush}" Padding="20" CornerRadius="14" Effect="{StaticResource PanelShadow}">
                <StackPanel>
                    <TextBlock Text="Workspace" FontSize="16" FontWeight="SemiBold" Foreground="{StaticResource TextPrimaryBrush}"/>
                    <ToggleButton x:Name="NavLogs" Content="Live Logs" Command="{Binding SwitchToLogsViewCommand}" Style="{StaticResource NavigationToggleStyle}">
                        <ToggleButton.IsChecked>
                            <Binding Path="ActiveView" Converter="{StaticResource StringEqualsConverter}" ConverterParameter="Logs"/>
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                    <ToggleButton x:Name="NavAnalytics" Content="Analytics" Command="{Binding SwitchToAnalyticsViewCommand}" Style="{StaticResource NavigationToggleStyle}">
                        <ToggleButton.IsChecked>
                            <Binding Path="ActiveView" Converter="{StaticResource StringEqualsConverter}" ConverterParameter="Analytics"/>
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                    <ToggleButton x:Name="NavBookmarks" Content="Bookmarks" Command="{Binding SwitchToBookmarksViewCommand}" Style="{StaticResource NavigationToggleStyle}">
                        <ToggleButton.IsChecked>
                            <Binding Path="ActiveView" Converter="{StaticResource StringEqualsConverter}" ConverterParameter="Bookmarks"/>
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                    <ToggleButton x:Name="NavAlerts" Content="Smart Alerts" Command="{Binding SwitchToAlertsViewCommand}" Style="{StaticResource NavigationToggleStyle}">
                        <ToggleButton.IsChecked>
                            <Binding Path="ActiveView" Converter="{StaticResource StringEqualsConverter}" ConverterParameter="Alerts"/>
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                    <ToggleButton x:Name="NavCompare" Content="Compare Runs" Command="{Binding SwitchToCompareViewCommand}" Style="{StaticResource NavigationToggleStyle}">
                        <ToggleButton.IsChecked>
                            <Binding Path="ActiveView" Converter="{StaticResource StringEqualsConverter}" ConverterParameter="Compare"/>
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                    <ToggleButton x:Name="NavExport" Content="Exports" Command="{Binding SwitchToExportViewCommand}" Style="{StaticResource NavigationToggleStyle}">
                        <ToggleButton.IsChecked>
                            <Binding Path="ActiveView" Converter="{StaticResource StringEqualsConverter}" ConverterParameter="Export"/>
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                    <ToggleButton x:Name="NavSettings" Content="Settings" Command="{Binding SwitchToSettingsViewCommand}" Style="{StaticResource NavigationToggleStyle}">
                        <ToggleButton.IsChecked>
                            <Binding Path="ActiveView" Converter="{StaticResource StringEqualsConverter}" ConverterParameter="Settings"/>
                        </ToggleButton.IsChecked>
                    </ToggleButton>
                </StackPanel>
            </Border>

            <Border Grid.Column="1" Background="{StaticResource SurfaceAltBrush}" CornerRadius="18" Padding="24" Effect="{StaticResource PanelShadow}">
                <ContentControl>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Text="Choose a module from the navigation to get started." Foreground="{StaticResource TextSecondaryBrush}" FontSize="16"/>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ActiveView}" Value="Logs">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" MinWidth="680"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="420"/>
                                                    </Grid.ColumnDefinitions>

                                                    <DataGrid x:Name="LogEntriesDataGrid"
                                                              ItemsSource="{Binding LogEntriesView}"
                                                              SelectedItem="{Binding SelectedLogEntry, Mode=TwoWay}"
                                                              Style="{StaticResource PremiumDataGridStyle}"
                                                              RowStyle="{StaticResource PremiumDataGridRowStyle}"
                                                              ColumnHeaderStyle="{StaticResource PremiumColumnHeaderStyle}"
                                                              FontSize="{Binding LogFontSize}"
                                                              AutoGenerateColumns="False"
                                                              IsReadOnly="True"
                                                              Margin="0,0,16,0">
                                                        <DataGrid.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="Copy Selected" Command="{Binding CopySelectedCommand}"/>
                                                                <MenuItem Header="Copy Raw" Command="{Binding CopyRawCommand}"/>
                                                                <MenuItem Header="Copy Compact" Command="{Binding CopyCompactCommand}"/>
                                                                <MenuItem Header="Copy Details" Command="{Binding CopyDetailsCommand}"/>
                                                            </ContextMenu>
                                                        </DataGrid.ContextMenu>

                                                        <DataGrid.Columns>
                                                            <DataGridTemplateColumn Header="" Width="46" IsReadOnly="True">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <Border Background="#1F2642" CornerRadius="8" Padding="12,6" HorizontalAlignment="Center">
                                                                            <ui:SymbolIcon Symbol="{Binding Level, Converter={StaticResource LogLevelToIconConverter}}"
                                                                                           Foreground="{Binding Level, Converter={StaticResource LogLevelToColorConverter}}"
                                                                                           Width="16" Height="16"/>
                                                                        </Border>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTextColumn Header="Timestamp" Binding="{Binding FormattedTimestamp}" Width="180"/>
                                                            <DataGridTemplateColumn Header="Source" Width="200">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <Border Background="#1F2B4F" CornerRadius="10" Padding="10,4">
                                                                            <TextBlock Text="{Binding Source}" Foreground="{Binding Source, Converter={StaticResource SourceToColorConverter}}" FontWeight="SemiBold"/>
                                                                        </Border>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn Header="Message" Width="*">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock TextWrapping="Wrap" TextTrimming="CharacterEllipsis">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource RawOrCompactMessageConverter}">
                                                                                    <Binding Path="DataContext.IsRawMode" RelativeSource="{RelativeSource AncestorType=DataGrid}"/>
                                                                                    <Binding/>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                        </DataGrid.Columns>
                                                    </DataGrid>

                                                    <GridSplitter Grid.Column="1" HorizontalAlignment="Center" Margin="0,0,8,0" Width="6" Background="#1F243D"
                                                                  Visibility="{Binding IsDetailsPaneVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                                    <Border Grid.Column="2" Background="{StaticResource SurfaceElevatedBrush}" CornerRadius="16" Padding="20" BorderBrush="#202740" BorderThickness="1"
                                                            Visibility="{Binding IsDetailsPaneVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                            <StackPanel DataContext="{Binding SelectedLogEntry}">
                                                                <TextBlock Text="Log Entry Details" FontSize="20" FontWeight="SemiBold" Foreground="{StaticResource TextPrimaryBrush}" Margin="0,0,0,16"/>
                                                                <ContentControl Content="{Binding}">
                                                                    <ContentControl.Style>
                                                                        <Style TargetType="ContentControl">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                                                                    <Setter Property="ContentTemplate">
                                                                                        <Setter.Value>
                                                                                            <DataTemplate>
                                                                                                <TextBlock Text="Select an event to see full diagnostics." Foreground="{StaticResource TextSecondaryBrush}" FontStyle="Italic"/>
                                                                                            </DataTemplate>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ContentControl.Style>
                                                                </ContentControl>
                                                                <StackPanel Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
                                                                    <TextBlock Text="{Binding Message}" Foreground="{StaticResource TextPrimaryBrush}" TextWrapping="Wrap" Margin="0,0,0,12" FontSize="15"/>
                                                                    <TextBlock Foreground="{StaticResource TextSecondaryBrush}">
                                                                        <Run Text="Source:"/>
                                                                        <Run Text=" "/>
                                                                        <Run Text="{Binding Source}" FontWeight="SemiBold"/>
                                                                    </TextBlock>
                                                                    <TextBlock Foreground="{StaticResource TextSecondaryBrush}">
                                                                        <Run Text="Timestamp:"/>
                                                                        <Run Text=" "/>
                                                                        <Run Text="{Binding FormattedTimestamp}" FontWeight="SemiBold"/>
                                                                    </TextBlock>
                                                                    <TextBlock Foreground="{StaticResource TextSecondaryBrush}">
                                                                        <Run Text="Level:"/>
                                                                        <Run Text=" "/>
                                                                        <Run Text="{Binding Level}" FontWeight="SemiBold"/>
                                                                    </TextBlock>
                                                                    <StackPanel Orientation="Horizontal" Margin="0,16,0,0">
                                                                        <ItemsControl ItemsSource="{Binding Tags}">
                                                                            <ItemsControl.ItemsPanel>
                                                                                <ItemsPanelTemplate>
                                                                                    <WrapPanel/>
                                                                                </ItemsPanelTemplate>
                                                                            </ItemsControl.ItemsPanel>
                                                                            <ItemsControl.ItemTemplate>
                                                                                <DataTemplate>
                                                                                    <Border Style="{StaticResource TagPillStyle}">
                                                                                        <TextBlock Text="{Binding Name}" Foreground="{StaticResource TextSecondaryBrush}"/>
                                                                                    </Border>
                                                                                </DataTemplate>
                                                                            </ItemsControl.ItemTemplate>
                                                                        </ItemsControl>
                                                                    </StackPanel>
                                                                    <Expander Header="Raw Payload" Margin="0,12,0,0">
                                                                        <ScrollViewer VerticalScrollBarVisibility="Auto" Height="120">
                                                                            <TextBlock Text="{Binding RawLine}" FontFamily="Consolas" TextWrapping="Wrap" Foreground="{StaticResource TextSecondaryBrush}"/>
                                                                        </ScrollViewer>
                                                                    </Expander>
                                                                    <Expander Header="Exception" Margin="0,12,0,0" Visibility="{Binding Exception, Converter={StaticResource NullToVisibilityConverter}}">
                                                                        <TextBlock Text="{Binding Exception}" TextWrapping="Wrap" Foreground="{StaticResource DangerBrush}"/>
                                                                    </Expander>
                                                                    <Expander Header="Stack Trace" Margin="0,12,0,0" Visibility="{Binding StackTrace, Converter={StaticResource NullToVisibilityConverter}}">
                                                                        <ScrollViewer VerticalScrollBarVisibility="Auto" Height="180">
                                                                            <TextBlock Text="{Binding StackTrace}" FontFamily="Consolas" TextWrapping="Wrap" Foreground="{StaticResource TextSecondaryBrush}"/>
                                                                        </ScrollViewer>
                                                                    </Expander>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Grid>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ActiveView}" Value="Analytics">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock Text="Operational Analytics" FontSize="22" FontWeight="SemiBold" Foreground="{StaticResource TextPrimaryBrush}"/>
                                                    <TextBlock Text="Refresh analytics to compute health scores and anomaly reports." Margin="0,4,0,16" Foreground="{StaticResource TextSecondaryBrush}"/>
                                                    <Button Content="Run Analytics" Command="{Binding RefreshAnalyticsCommand}" Width="160"/>
                                                    <Button Content="Detect Anomalies" Command="{Binding FindAnomaliesCommand}" Width="180" Style="{StaticResource GhostButtonStyle}" Margin="12,12,0,0"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ActiveView}" Value="Bookmarks">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock Text="Bookmarked Incidents" FontSize="22" FontWeight="SemiBold" Foreground="{StaticResource TextPrimaryBrush}"/>
                                                    <TextBlock Text="Bookmarks let you tag high value events for later triage." Margin="0,4,0,16" Foreground="{StaticResource TextSecondaryBrush}"/>
                                                    <Button Content="Add Bookmark" Command="{Binding AddBookmarkCommand}" Width="150"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ActiveView}" Value="Alerts">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock Text="Smart Alert Center" FontSize="22" FontWeight="SemiBold" Foreground="{StaticResource TextPrimaryBrush}"/>
                                                    <TextBlock Text="Manage predictive alerts that surface error storms automatically." Margin="0,4,0,16" Foreground="{StaticResource TextSecondaryBrush}"/>
                                                    <Button Content="Configure Alerts" Command="{Binding CreateAlertCommand}" Width="160"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ActiveView}" Value="Compare">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <local:CompareView/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ActiveView}" Value="Export">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <local:ExportView/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ActiveView}" Value="Settings">
                                    <Setter Property="ContentTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <local:SettingsView/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Border>
        </Grid>
        <!-- Status bar placeholder -->
        <Border Grid.Row="3" Background="{StaticResource SurfaceAltBrush}" Margin="24,0,24,24" Padding="18" CornerRadius="14" BorderBrush="{StaticResource StrokeBrush}" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding StatusMessage}" Foreground="{StaticResource TextSecondaryBrush}"/>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Margin="0,0,16,0">
                        <Run Text="Logs:"/>
                        <Run Text="{Binding FilteredLogCount}" FontWeight="SemiBold"/>
                        <Run Text="/"/>
                        <Run Text="{Binding TotalLogCount}" FontWeight="SemiBold"/>
                    </TextBlock>
                    <TextBlock Text="{Binding ThemeService.CurrentTheme}" Foreground="{StaticResource TextMutedBrush}"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>







